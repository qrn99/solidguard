import { Field, InputType, ObjectType } from '@nestjs/graphql';
import {
  IsString,
  IsOptional,
  IsEthereumAddress,
  IsArray,
  Matches,
  IsUUID,
  ArrayMinSize,
} from 'class-validator';

export class CreateExploitDto {
  name: string;
  authorUserId: string;
  description: string;
  targetAddr: string;
  targetNames: string[];
}

@InputType()
export class SearchExploitsQueryDto {
  @Field()
  @IsString()
  @Matches(/[a-zA-Z0-9 ]*/)
  @IsOptional()
  name?: string;
}

@InputType()
export class CreateExploitRequestDto {
  @Field()
  @IsString()
  @Matches(/^[a-zA-Z0-9 ]+$/)
  name: string;
  @Field()
  @IsString()
  description: string; // Must be escaped! See ExploitController.

  @Field(() => [String])
  @IsArray()
  @ArrayMinSize(1)
  @Matches(/^[a-zA-Z0-9 ]+$/, { each: true })
  targetNames: string[];

  @Field()
  @IsEthereumAddress()
  targetAddr: string;
}

@InputType()
export class ExploitIdParamDto {
  @Field()
  @IsUUID()
  exploitId: string;
}

@ObjectType()
export class CreateExploitResponseDto {
  @Field()
  id: string;
  @Field()
  name: string;
  @Field()
  authorUserId: string;
  @Field()
  description: string;
  @Field()
  targetAddr: string;

  @Field(() => [String])
  targetNames: string[];
  @Field()
  verified: boolean;
}

@ObjectType()
export class ExploitResponseDto {
  @Field()
  id: string;
  @Field()
  name: string;
  @Field()
  authorName: string;

  @Field()
  description: string;
  @Field()
  targetAddr: string;

  @Field(() => [String])
  @IsArray()
  targetNames: string[];

  @Field()
  verified: boolean;
}

export class ExploitNotifyJobDto {
  exploitId: string;
}

export class SearchExploitsDto {
  pageNo: number;
  name: string;
}
